//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMS.Resources.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PmsEntities : DbContext
    {
        public PmsEntities()
            : base("name=PmsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AddressType> AddressTypes { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<GuestMapping> GuestMappings { get; set; }
        public virtual DbSet<GuestReward> GuestRewards { get; set; }
        public virtual DbSet<IDType> IDTypes { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvoiceTaxDetail> InvoiceTaxDetails { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<RateType> RateTypes { get; set; }
        public virtual DbSet<RewardCategory> RewardCategories { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<RoomBooking> RoomBookings { get; set; }
        public virtual DbSet<RoomPricing> RoomPricings { get; set; }
        public virtual DbSet<RoomType> RoomTypes { get; set; }
        public virtual DbSet<State> States { get; set; }
    
        public virtual ObjectResult<GETALLBOOKINGS_Result> GETALLBOOKINGS(Nullable<int> pROPERTYID, Nullable<System.DateTime> cHECKINTIME, Nullable<System.DateTime> cHECKOUTDATE)
        {
            var pROPERTYIDParameter = pROPERTYID.HasValue ?
                new ObjectParameter("PROPERTYID", pROPERTYID) :
                new ObjectParameter("PROPERTYID", typeof(int));
    
            var cHECKINTIMEParameter = cHECKINTIME.HasValue ?
                new ObjectParameter("CHECKINTIME", cHECKINTIME) :
                new ObjectParameter("CHECKINTIME", typeof(System.DateTime));
    
            var cHECKOUTDATEParameter = cHECKOUTDATE.HasValue ?
                new ObjectParameter("CHECKOUTDATE", cHECKOUTDATE) :
                new ObjectParameter("CHECKOUTDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLBOOKINGS_Result>("GETALLBOOKINGS", pROPERTYIDParameter, cHECKINTIMEParameter, cHECKOUTDATEParameter);
        }
    
        public virtual ObjectResult<GETROOMSTATUS_Result> GETROOMSTATUS(Nullable<int> pROPERTYID, Nullable<System.DateTime> cHECKINTIME, Nullable<System.DateTime> cHECKOUTDATE, Nullable<int> rOOMTYPEID)
        {
            var pROPERTYIDParameter = pROPERTYID.HasValue ?
                new ObjectParameter("PROPERTYID", pROPERTYID) :
                new ObjectParameter("PROPERTYID", typeof(int));
    
            var cHECKINTIMEParameter = cHECKINTIME.HasValue ?
                new ObjectParameter("CHECKINTIME", cHECKINTIME) :
                new ObjectParameter("CHECKINTIME", typeof(System.DateTime));
    
            var cHECKOUTDATEParameter = cHECKOUTDATE.HasValue ?
                new ObjectParameter("CHECKOUTDATE", cHECKOUTDATE) :
                new ObjectParameter("CHECKOUTDATE", typeof(System.DateTime));
    
            var rOOMTYPEIDParameter = rOOMTYPEID.HasValue ?
                new ObjectParameter("ROOMTYPEID", rOOMTYPEID) :
                new ObjectParameter("ROOMTYPEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETROOMSTATUS_Result>("GETROOMSTATUS", pROPERTYIDParameter, cHECKINTIMEParameter, cHECKOUTDATEParameter, rOOMTYPEIDParameter);
        }
    
        public virtual int InsertBooking(Nullable<int> propertyID, string bookingXML)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("propertyID", propertyID) :
                new ObjectParameter("propertyID", typeof(int));
    
            var bookingXMLParameter = bookingXML != null ?
                new ObjectParameter("bookingXML", bookingXML) :
                new ObjectParameter("bookingXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBooking", propertyIDParameter, bookingXMLParameter);
        }
    }
}
