
@{
    ViewBag.Title = "Manage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type='text/javascript'>
    var gcm = window.GuestCheckinManager;
    var rateTypeId = -1;

    function getRateTypeId() {
        rateTypeId = rateTypeId === -1 ? $('input[name=firsttab]')[0].id : rateTypeId;
        return rateTypeId;
    }
    function setFocusOnCurrentTab(currentTabId) {
        if ($("input:checked").length > 0) {
            var tabSelector = $("input:checked");
            for (var i = 0; i < tabSelector.length; i++) {
                tabSelector[i].checked = false;
            }
        }
        var currentTab = $('#' + currentTabId);
        if (currentTab) {
            currentTab.attr("checked", "checked");
            currentTab.focus();
        }
    }
   
    function onRateTabClick(tabObj) {
        rateTypeId = tabObj ? tabObj.id : -1;
        setFocusOnCurrentTab(rateTypeId);
        var existingRoomRate = gcm.FindSetting(rateTypeId, window.GuestCheckinManager.PropertySettingResponseDto.RateSettings);
        Notifications.Subscribe("on-roomrate-get-success", function (sender, args) {
            var roomRate = gcm.FindSetting(rateTypeId, window.GuestCheckinManager.PropertySettingResponseDto.RateSettings);
            setFocusOnCurrentTab(rateTypeId);
            gcm.PopulateRoomRateInGrid(roomRate);
        });
        gcm.PopulateRoomRateInGrid(existingRoomRate);
    }
    
    function getFloorNumberByRoomId(roomId) {
        var floorNumber = -1;
        var rooms = window.GuestCheckinManager.PropertySettingResponseDto.RoomSettings;
        if (!rooms || rooms.length <= 0) return floorNumber;
        for (var i = 0; i < rooms.length; i++) {
            if (rooms[i].Id !== parseInt(roomId)) continue;
            floorNumber = rooms[i].Floor.FloorNumber;           
            return floorNumber;
        }
        return floorNumber;
    }

    function onRoomChange(ddlRoom, tdFloor) {
        var roomId = ddlRoom.value;
        var floorNumber = getFloorNumberByRoomId(roomId);
        if (!tdFloor) {
            tdFloor = $('#tdFloorAdd');
        }
        tdFloor[0].innerText = floorNumber;
    }

    function onRoomTypeChange(ddlRoomType, ddlRoom) {
        if (!ddlRoom) {
            ddlRoom = $('#ddlRoomAdd');
       }
      gcm.FillRoomData(ddlRoomType, ddlRoom, $('#ddlProperty').val());
    }

    function makeFieldsReadonly(rowObject) {
        rowObject.attr('contenteditable', 'false');
        rowObject.css('background-color', 'transparent');
    }

    function onPropertyChange() {
        if ($('#ddlProperty').val() <= 0) {
            alert('Select valid property');
            return;
        }
        gcm.GetRoomRateByProperty($('#ddlProperty').val());
    }

    $(document).ready(function () {
        gcm.GetAllProperty();

        $("#divManageRate").on("click", ".fa-plus-circle", function () {
            $(this).closest('tr').after('<tr><td class="idRow" contenteditable="false"></td><td contenteditable="true" style="background-color: #ffc9c9;"><select style="display:block" id="ddlRoomTypeAdd" onchange="onRoomTypeChange(this,null);" class="form-control"><option value="-1">Select RoomType</option></select></td><td contenteditable="true" style="background-color: #ffc9c9;"><select style="display:block" id="ddlRoomAdd" onchange="onRoomChange(this,null);" class="form-control"><option value="-1">Select Room</option></select></td><td id="tdFloorAdd" class="idRow" contenteditable="false"></td><td contenteditable="true" style="background-color: #ffc9c9;"></td><td class="finalActionsCol"><i class="fa  fa-plus-circle" aria-hidden="true"></i><i class="fa fa-minus-circle" aria-hidden="true"></i><i class="fa fa-floppy-o editMode" aria-hidden="true"></i></td></tr>');
            gcm.FillRoomTypeData($('#ddlRoomTypeAdd'), $('#ddlProperty').val());
        });

        $("#divManageRate").on("click", ".fa-minus-circle", function () {
            if (confirm("Are you sure you want to delete ?")) {
                var rateId = $(this).closest('tr')[0].id;
                $(this).closest('tr').remove();
                if (rateId <= 0) return;
                gcm.DeleteRoomRate(rateId);
                if ($('#divManageRate tbody tr').length <= 0) {
                    $('#ddlProperty').val('-1');
                }
            }
        });

        $("#divManageRate").on("click", ".fa-pencil-square-o, .fa-floppy-o", function () {
            var thisRow = $(this).parent().siblings();
            var editOn = $(this).hasClass("editMode");
            var rateId = $(thisRow)[0].innerText;
            var propertyId = $('#ddlProperty').val();
            if (editOn == false) {
                gcm.OnGridEdit(editOn, $(thisRow), $(this));

                var cloneRoomType = $('#ddlRoomTypeClone').clone(true);
                cloneRoomType[0].style = 'display:block';
                cloneRoomType[0].id = 'ddlRoomTypeClone' + rateId;
                var roomTypeSelector = '#' + cloneRoomType[0].id;
                $(thisRow)[1].innerText = "";
                $(thisRow[1]).append(cloneRoomType);

                var cloneRoom = $('#ddlRoomClone').clone(true);
                cloneRoom[0].style = 'display:block';
                cloneRoom[0].id = 'ddlRoomClone' + rateId;
                var roomSelector = '#' + cloneRoom[0].id;
                $(thisRow)[2].innerText = "";
                $(thisRow[2]).append(cloneRoom);

                $(document).on('change', roomTypeSelector, function () {
                    onRoomTypeChange($(cloneRoomType)[0], $(cloneRoom));
                });

                $(document).on('change', roomSelector, function () {
                    onRoomChange($(cloneRoom)[0], $(thisRow[3]));
                });

                makeFieldsReadonly($(thisRow[0]));
                makeFieldsReadonly($(thisRow[3]));
                gcm.FillRoomTypeData($(roomTypeSelector), $('#ddlProperty').val());

            } else if (editOn == true) {
                var roomTypeId = $(thisRow)[1].children[0].value;
                var roomId = $(thisRow)[2].children[0].value;
                var rateValue = $(thisRow)[4].innerText;

                if (roomTypeId <= 0) {
                    alert("Select proper room type");
                    return;
                }
                if (roomId <= 0) {
                    alert("Select proper room number");
                    return;
                }
                if (isNaN(rateValue)) {
                    alert("Rate should be numeric");
                    return;
                }
                if (!rateValue || rateValue <= 0) {
                    alert("Rate should be greater than 0");
                    $(thisRow)[4].focus();
                    return;
                }

                if (rateId > 0) {
                    rateTypeId = getRateTypeId();
                    var idx = gcm.FindIndex(rateTypeId, window.GuestCheckinManager.PropertySettingResponseDto.RateSettings);
                    if (idx < 0) return;
                    var existingRate = gcm.FindSetting(rateId, window.GuestCheckinManager.PropertySettingResponseDto.RateSettings[idx].Rates);
                    if (!existingRate) return;
                    existingRate.RoomTypeId = roomTypeId;
                    existingRate.RoomId = roomId;
                    existingRate.Value = rateValue;
                    existingRate.PropertyId = propertyId;
                    existingRate.IsActive = true;
                    existingRate.RateTypeId = rateTypeId;
                    Notifications.SubscribeActive("on-roomrate-update-success", function (sender, args) {                        
                        window.GuestCheckinManager.GetRoomRateByProperty($('#ddlProperty').val());
                    });
                    //call UpdateRoomRate api
                    gcm.UpdateRoomRate(existingRate);
                } else {
                    if (propertyId <= 0) {
                        alert("Select valid property");
                        return;
                    }
                    var rate = {};
                    rateTypeId = getRateTypeId();
                    var existingRoomRate = gcm.FindSetting(rateTypeId, window.GuestCheckinManager.PropertySettingResponseDto.RateSettings);
                    if (!existingRoomRate) return;
                    rate.Id = -1;
                    rate.RateTypeId = rateTypeId;
                    rate.RoomTypeId = roomTypeId;
                    rate.RoomId = roomId;
                    rate.Value = rateValue;
                    rate.PropertyId = propertyId;
                    rate.Type = existingRoomRate.Units;
                    rate.IsActive = true;
                    rate.InputKeyHours = existingRoomRate.Units === 'Daily' ? null : existingRoomRate.Hours;
                    Notifications.SubscribeActive("on-roomrate-add-success", function (sender, args) {
                        window.GuestCheckinManager.GetRoomRateByProperty($('#ddlProperty').val());
                    });                    
                    //call AddRoomRate api
                    gcm.AddRoomRate(rate);
                }
                gcm.OnGridEdit(editOn, $(thisRow), $(this));
            }
        });

    });
</script>
<div class="content-wrap">
    <main class="tab-main">
            <div id="divRoomRate" class="table-data">
            </div>
    </main>
    <section id="content1">
        <div class="card-body room-details">
            <div class="row" style="">
                <div class="form-group col-lg-8 m-t-10">
                    <label>Search</label>
                    <input type="text" class="search form-control" placeholder="Search by Roomtype, room#, rate, floor# ...">
                </div>

                <div class="col-lg-2 p-l-0 p-r-0 m-t-10">
                    <div class="form-group">
                        <label>Select Property</label>
                        <select id="ddlProperty" onchange="onPropertyChange();">
                            <option value="-1">Select Property</option>
                        </select>
                    </div>
                </div>
                <div id="divManageRate" class="table-data">
                    <span class="counter"></span>
                </div>
            </div>
        </div>
        <br>
        <button id="save" class="btn btn-primary m-l-5 m-t-15" type="button">Save</button>
    </section>
</div>

<select style="display:none" id="ddlRoomTypeClone" class="form-control">
    <option value="-1">Select Roomtype</option>
</select>
<select style="display:none" id="ddlRoomClone" class="form-control">
    <option value="-1">Select Room</option>
</select>
<input type="hidden" value="" id='hdnRateTypeId'>
<div id="divLoader">
    <div class="loader" style="display:none;">
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
    </div>
</div>
<script type="text/html" id="roomRateTemplate">
        {{if typeof RoomRate != "undefined" && RoomRate != "null" && RoomRate.length > 0 }}
        {{each(i,rate) RoomRate}}
                {{if i===0}}
                        <input onclick="onRateTabClick(this);" id="${rate.Id}" type="radio" name="firsttab" checked="checked">
                        <label for="${rate.Id}">${rate.Name}</label>
                    {{else}}
                        <input onclick="onRateTabClick(this);" id="${rate.Id}" type="radio" name="tabs">
                        <label for="${rate.Id}">${rate.Name}</label>
                {{/if}}
        {{/each}}
        {{/if}}    
</script>
<script type="text/html" id="manageRateTemplate">
    <table class="table table-hover table-bordered results tableContents">
        <thead>
            <tr>
                <th id="IDCol">ID #</th>
                <th id="roomTypeCol" contenteditable="false">Room Type</th>
                <th id="roomnumberCol" contenteditable="false">Room #</th>
                <th id="floorCol" contenteditable="false">Floor</th>
                <th id="rateCol" contenteditable="false">Rate</th>
            </tr>
        </thead>
        <tbody>
            {{if typeof Rates != "undefined" && Rates != "null" && Rates.length > 0 }}
            {{each Rates}}
            <tr id="${$value.Id}">
                <td class="idRow" contenteditable="false">${$value.Id}</td>                
                <td contenteditable="false">${$value.Room.RoomType.Name}</td>
                <td contenteditable="false">${$value.Room.Number}</td>
                <td contenteditable="false">${$value.Room.Floor.FloorNumber}</td>
                <td contenteditable="false">${$value.Value}</td>
            </tr>
            {{/each}}
            {{else}}
            <tr>
                <td class="idRow" contenteditable="false"></td>                
                <td contenteditable="true" style="background-color: rgba(255,255,255,0.7);">
                    <select style="display:block" id="ddlRoomTypeAdd" onchange="onRoomTypeChange(this, $('#ddlRoomAdd'));" class="form-control">
                        <option value="-1">Select Roomtype</option>
                    </select> 
                </td>
                <td contenteditable="true" style="background-color: rgba(255,255,255,0.7);">
                    <select style="display:block" id="ddlRoomAdd" onchange="onRoomChange(this, $('#tdFloorAdd'));" class="form-control">
                        <option value="-1">Select Room</option>
                    </select>
                </td>
                <td class="floorRow" id="tdFloorAdd" contenteditable="false"></td>
                <td contenteditable="true" style="background-color: rgba(255,255,255,0.7);"></td>
            </tr>
            {{/if}}
        </tbody>
    </table>
</script>

