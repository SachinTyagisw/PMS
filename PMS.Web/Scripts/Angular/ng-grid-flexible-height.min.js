function ngGridFlexibleHeightPlugin(a) { var b = this; b.grid = null, b.scope = null, b.init = function (c, d, e) { b.domUtilityService = e.DomUtilityService, b.grid = d, b.scope = c; var f = function () { setTimeout(g, 1) }, g = function () { var c = b.grid.gridId, d = "." + c + " .ngFooterPanel", e = b.grid.$topPanel.height() + $(d).height(), f = b.grid.$canvas.height() + 1; null != a && (null != a.minHeight && f + e < a.minHeight && (f = a.minHeight - e - 2), null != a.maxHeight && f + e > a.maxHeight && (f = a.maxHeight)); var g = f + 3; b.scope.baseViewportHeight && b.scope.baseViewportHeight === g || (b.grid.$viewport.css("height", g + "px"), b.grid.$root.css("height", g + e + "px"), b.scope.baseViewportHeight = g, b.domUtilityService.RebuildGrid(b.scope, b.grid)) }; b.scope.catHashKeys = function () { var c, a = ""; for (c in b.scope.renderedRows) a += b.scope.renderedRows[c].$$hashKey; return a }, b.scope.$watch("catHashKeys()", g), b.scope.$watch(b.grid.config.data, f) } }